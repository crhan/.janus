set hidden
set nocompatible

" sets leader to ','
let mapleader=","

" Use pathogen to easily modify the runtime path to include all
" plugins under the ~/.vim/bundle directory
"call pathogen#helptags()
"call pathogen#runtime_append_all_bundles()

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" Source the vimrc file after saving it
"if has("autocmd")
"  autocmd bufwritepost .vimrc source $MYVIMRC
"  autocmd bufwritepost .vimrc.pre source $MYVIMRC
"endif

" Most basic settings
set wrap          " wrap lines
set tabstop=2     " a tab is four spaces
set expandtab     " expand tab to spaces
set backspace=indent,eol,start
                  " allow backspacing over everything in insert mode
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set number        " always show line numbers
set shiftwidth=2  " number of spaces to use for autoindenting
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                  "    case-sensitive otherwise
set smarttab      " insert tabs on the start of a line according to
                  "    shiftwidth, not tabstop
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type
set updatecount=100 " every 100 chars will vim save them to swap
set cursorline    " Highlight the cursor line
set list
set lcs=extends:>,precedes:<,tab:>-,trail:·

" Set vim to have a large undo buffer
set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

" Stop making backup file like you are in 70's, now you could use git
set nobackup

" Use file type plugins
filetype plugin indent on
"autocmd filetype python set expandtab

" Set term to support 256 color to enable the colorscheme mustang
" set t_Co=256

if &t_Co >= 256 || has("gui_running")
	colorscheme aqua
endif

if &t_Co > 2 || has("gui_running")
	" switch syntax highlighting on, when the terminal has colors
	syntax on
endif

" Automatically highlight whitespaces
" set list
" set listchars=tab:>.,trail:.,extends:#,nbsp:.
" autocmd filetype html,xml set listchars+=tab:\ \ 

" Add a shortcut Mappings for ":" and make j k more like the normal one
nnoremap ; :
"nnoremap j gj
"nnoremap k gk

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Easy to clear the hightlighting for search
nmap <silent> <leader>/ :nohlsearch<CR>

" Toggle the Tlist
nmap <silent> <leader>ll :TlistToggle<CR>

" Fold the select visual box
vmap <silent> <leader>fo :fo<cr>

cmap w!! w !sudo tee % >/dev/null

" Move cursor when inserting
imap <C-h> <left>
imap <C-j> <down>
imap <C-k> <up>
imap <C-l> <right>

" Add keybind for yankring.vim
nnoremap <silent> <F8> :YRShow<CR>

" Bind lusty-juggler to <leader>b
nmap <silent> <Leader>b :LustyJuggler<CR>

" Bind paste mode toggle to <Leader>p
set pastetoggle=<leader>p

" set vimpress
" let VIMPRESS = [{'username':'crhan',
"                 \'blog_url':'http://b.crhan.com/'
"                 \}]

" Markdown to HTML
nmap <leader>md :%!/usr/bin/Markdown.pl <cr>

" NERDTree key binding
nmap <leader>nt :NERDTree<cr>

let g:input_toggle = 1
function! Fcitx2en()
   let s:input_status = system("fcitx-remote")
   if s:input_status == 2
      let g:input_toggle = 1
      let l:a = system("fcitx-remote -c")
   endif
endfunction

function! Fcitx2zh()
   let s:input_status = system("fcitx-remote")
   if s:input_status != 2 && g:input_toggle == 1
      let l:a = system("fcitx-remote -o")
      let g:input_toggle = 0
   endif
endfunction

" 快捷键间隔时间
" set timeoutlen=150

" fcitx 远程调用
"autocmd InsertLeave * call Fcitx2en()
"autocmd InsertEnter * call Fcitx2zh()

let g:user_zen_settings = {
      \  'indentation' : '  ',
      \  'perl' : {
      \    'indentation' : '  ',
      \    'aliases' : {
      \      'req' : "require '|'"
      \    },
      \    'snippets' : {
      \      'use' : "use strict\nuse warnings\n\n",
      \      'w' : "warn \"${cursor}\";",
      \    },
      \  },
      \'php' : {
      \'extends' : 'html',
      \'filters' : 'c',
      \},
      \'xml' : {
      \'extends' : 'html',
      \},
      \'haml' : {
      \'extends' : 'html',
      \},
      \}
let g:user_zen_leader_key = '<c-e>'
nnoremap <silent> <Leader>t :CommandT<CR>
